{"version":3,"file":"static/js/655.28b9db73.chunk.js","mappings":"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","sources":["api.js","components/BackLink/BackLink.js","components/ErrorMessage.js","components/MoviesCast/MoviesCast.jsx","components/MoviesReviews/MoviesReviews.jsx","components/MoviesInfo/MoviesInfo.jsx","hooks/useInfo.js","components/MoviesPersonalPage/MoviesPersonalPage.jsx","pages/MoviesPage.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = \"bad3f777e7df0ee5e923cebd13a08cda\";\nexport const fetchMovies = async () => {\n    const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n    return response.data;\n};\n\nexport const fetchMoviesById = async quizId => {\n    const response = await axios.get(`/movie/${quizId}?api_key=${API_KEY}`);\n    return response.data;\n};\n\nexport const fetchMoviesByIdCast = async (quizId, controller) => {\n    const response = await axios.get(`/movie/${quizId}/credits?api_key=${API_KEY}`, {\n        signal: controller.signal,\n    });\n    return response.data;\n};\n\nexport const fetchMoviesByIdReviews = async (quizId, controller) => {\n    const response = await axios.get(`/movie/${quizId}/reviews?api_key=${API_KEY}`, {\n        signal: controller.signal,\n    });\n    return response.data;\n};\n\nexport const fetchMoviesBySearch = async search => {\n    const response = await axios.get(`/search/movie?query=${search}&include_adult=false&language=en-US&page=1&api_key=${API_KEY}`);\n    return response.data;\n};\n","import { BsArrowLeft } from 'react-icons/bs';\nimport { Link } from 'react-router-dom';\n\nexport const BackLink = ({ to = '/', children }) => {\n    return (\n        <Link to={to}>\n            <BsArrowLeft />\n            {children}\n        </Link>\n    );\n};\n","import styled from 'styled-components';\n\nexport const ErrorMessage = styled.b`\n  color: ${p => p.theme.colors.error};\n`;\n","import { fetchMoviesByIdCast } from \"api\";\nimport { ErrorMessage } from \"../ErrorMessage\";\nimport { useEffect, useState } from \"react\";\nimport { Bars } from \"react-loader-spinner\";\nimport { useParams } from \"react-router-dom\";\n\nexport const MoviesCast = () => {\n    const params = useParams();\n    const [cast, setCast] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(false);\n\n    useEffect(() => {\n        const controller = new AbortController();\n\n        async function getMovies() {\n            try {\n                setLoading(true);\n                const fetchedMovies = await fetchMoviesByIdCast(params.movieId, controller);\n                setCast(fetchedMovies);\n            } catch (error) {\n                if (error.message !== 'canceled') {\n                    console.log(error);\n                    setError(true);\n                }\n            } finally {\n                setLoading(false);\n            }\n        }\n\n        getMovies();\n\n        return () => {\n            controller.abort();\n        };\n    }, [params.movieId]);\n\n    const castList = cast.cast;\n\n    return (\n        <>\n            {loading && (\n                <Bars\n                    height=\"80\"\n                    width=\"80\"\n                    color=\"#4fa94d\"\n                    ariaLabel=\"bars-loading\"\n                    visible={true}\n                />\n            )}\n            {error && (\n                <ErrorMessage>Whoops! Error! Please reload this page!</ErrorMessage>\n            )}\n            <ul>\n                {castList && castList.map(element => (\n                    <li key={element.id}>\n                        <p>{element.name}</p>\n                        <p>{element.character}</p>\n                        <img src={`https://www.themoviedb.org/t/p/w220_and_h330_face${element.profile_path}`} alt=\"actor\" width={100} height={150} />\n                    </li>\n                ))}\n            </ul>\n\n            {(castList?.length === 0) && (<p>there are no cast</p>)}\n        </>\n    );\n};","import { fetchMoviesByIdReviews } from \"api\";\nimport { ErrorMessage } from \"../ErrorMessage\";\nimport { useEffect, useState } from \"react\";\nimport { Bars } from \"react-loader-spinner\";\nimport { useParams } from \"react-router-dom\";\n\nexport const MoviesReviews = () => {\n    const params = useParams();\n    const [reviews, setReviews] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(false);\n\n    useEffect(() => {\n        const controller = new AbortController();\n\n        async function getMovies() {\n            try {\n                setLoading(true);\n                const fetchedMovies = await fetchMoviesByIdReviews(params.movieId, controller);\n                setReviews(fetchedMovies);\n            } catch (error) {\n                if (error.message !== 'canceled') {\n                    console.log(error);\n                    setError(true);\n                }\n            } finally {\n                setLoading(false);\n            }\n        }\n\n        getMovies();\n\n        return () => {\n            controller.abort();\n        };\n    }, [params.movieId]);\n\n    const reviewsList = reviews.results;\n\n    return (\n        <>\n            {loading && (\n                <Bars\n                    height=\"80\"\n                    width=\"80\"\n                    color=\"#4fa94d\"\n                    ariaLabel=\"bars-loading\"\n                    visible={true}\n                />\n            )}\n            {error && (\n                <ErrorMessage>Whoops! Error! Please reload this page!</ErrorMessage>\n            )}\n            <ul>\n                {reviewsList && reviewsList.map(element => (\n                    <li key={element.id}>\n                        <p>{`Author: ${element.author}`}</p>\n                        <p>{element.content}</p>\n                    </li>\n                ))}\n            </ul>\n            {(reviewsList?.length === 0) && (<p>there are no reviews</p>)}\n        </>\n    );\n};","import { MoviesCast } from \"components/MoviesCast/MoviesCast\";\nimport { MoviesReviews } from \"components/MoviesReviews/MoviesReviews\";\nimport { useInfo } from \"hooks/useInfo\";\n\nexport const MoviesInfo = () => {\n    const { cast, reviews, changeCast, changeReviews } = useInfo();\n    return (\n        <div>\n            <div>\n                <button onClick={() => changeCast()}> Cast </button>\n                {cast && <MoviesCast></MoviesCast>}\n            </div>\n            <div>\n                <button onClick={() => changeReviews()}> Reviews </button>\n                {reviews &&\n                    <div>\n                        <MoviesReviews></MoviesReviews>\n                    </div>\n                }\n            </div>\n        </div>\n    );\n};","import { useSearchParams } from 'react-router-dom';\n\nexport const useInfo = () => {\n    const [params, setParams] = useSearchParams();\n    const cast = params.get('cast') ?? '';\n    const reviews = params.get('reviews') ?? '';\n\n    const changeCast = () => {\n        if (!cast) {\n            params.set('cast', 'cast');\n        } else {\n            params.set('cast', '');\n        }\n\n        setParams(params);\n    };\n\n    const changeReviews = evt => {\n        if (!reviews) {\n            params.set('reviews', 'reviews');\n        } else {\n            params.set('reviews', '');\n        }\n        setParams(params);\n    };\n\n    return {\n        cast,\n        reviews,\n        changeCast,\n        changeReviews,\n    };\n};","export const MoviesPersonalPage = ({ movies }) => {\n\n    return (\n        <div>\n            <img src={`https://www.themoviedb.org/t/p/w220_and_h330_face${movies.poster_path}`} alt=\"#\" />\n            <p>{movies.title}</p>\n            <p>{`popularity ${movies.popularity}`}</p>\n            <p>{`release date ${movies.release_date}`}</p>\n            <p>{`${movies.overview}`}</p>\n            <p>genres</p>\n            <ul>\n                {movies.genres.map(element => (\n                    <li>{element.name}</li>\n                )\n                )}\n            </ul>\n        </div>\n    );\n}","import { fetchMoviesById } from 'api';\nimport { BackLink } from 'components/BackLink/BackLink';\nimport { MoviesInfo } from 'components/MoviesInfo/MoviesInfo';\nimport { MoviesPersonalPage } from 'components/MoviesPersonalPage/MoviesPersonalPage';\nimport { useEffect, useState } from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\n\nexport default function QuizDetailsPage() {\n    const location = useLocation();\n    const params = useParams();\n    const [movies, setMovies] = useState();\n\n    useEffect(() => {\n        async function getMovies() {\n            try {\n                const fetchedMovies = await fetchMoviesById(params.movieId);\n                setMovies(fetchedMovies);\n            } catch (error) { }\n        }\n\n        getMovies();\n    }, [params.movieId]);\n\n    return (\n        <div>\n            <h1>MoviesDetailsPage</h1>\n\n            <BackLink to={location.state?.from ?? '/movies'}>\n                Back to Search\n            </BackLink>\n\n            {movies && (\n                <>\n                    <MoviesPersonalPage movies={movies}></MoviesPersonalPage>\n                    <MoviesInfo></MoviesInfo>\n                </>\n            )}\n        </div>\n    );\n}"],"names":["axios","API_KEY","fetchMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","concat","sent","abrupt","data","stop","apply","arguments","fetchMoviesById","_ref2","_callee2","quizId","_context2","_x","fetchMoviesByIdCast","_ref3","_callee3","controller","_context3","signal","_x2","_x3","fetchMoviesByIdReviews","_ref4","_callee4","_context4","_x4","_x5","fetchMoviesBySearch","_ref5","_callee5","search","_context5","_x6","BackLink","_ref$to","to","children","_jsxs","Link","_jsx","BsArrowLeft","ErrorMessage","styled","_templateObject","_taggedTemplateLiteral","p","theme","colors","error","MoviesCast","params","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","_useState3","_useState4","loading","setLoading","_useState5","_useState6","setError","useEffect","AbortController","_getMovies","fetchedMovies","movieId","t0","message","console","log","finish","getMovies","abort","castList","_Fragment","Bars","height","width","color","ariaLabel","visible","map","element","name","character","src","profile_path","alt","id","length","MoviesReviews","reviews","setReviews","reviewsList","results","author","content","MoviesInfo","_useInfo","_params$get","_params$get2","_useSearchParams","useSearchParams","_useSearchParams2","setParams","get","changeCast","set","changeReviews","evt","useInfo","onClick","MoviesPersonalPage","movies","poster_path","title","popularity","release_date","overview","genres","QuizDetailsPage","_location$state$from","_location$state","location","useLocation","setMovies","state","from"],"sourceRoot":""}